{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template Bastion Server: Bastion Server launched in Public Subnet and open SSH access to office IP only.",

  "Parameters" : {
    "VPCStackName": {
      "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
      "Type": "String",
      "MinLength": 1,
      "MaxLength": 255,
      "Default": "VPC"
    },
    "SGStackName": {
      "Description": "Name of an active CloudFormation stack that contains the security group resources that will be used in this stack.",
      "Type": "String",
      "MinLength": 1,
      "MaxLength": 255,
      "Default": "SG"
    },
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType" : {
      "Description" : "Bastion Server EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
  },

  "Mappings" : {
    "AWSRegionOS2AMI" : {
      "us-west-1": {
        "xenial": "ami-04d2b883688faa414",
        "trusty": "ami-0f81fc935e2c05b47"
      },
      "us-west-2": {
        "xenial": "ami-07891ef972bbf5ae7",
        "trusty": "ami-0d23f1d31289bf4e3"
      }
    }
  },

  "Resources" : {
    "BastionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
          "Path": "/CloudFormation/",
          "AssumeRolePolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
                "Effect": "Allow",
                "Principal": {
                  "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
            } ]
          }
      }
    },
    "BastionRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
          "PolicyName": "BastionRolePolicy",
          "PolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ssm:DescribeParameters",
                  "ec2:Describe*",
                  "rds:Describe*",
                  "elasticache:Describe*",
                  "route53:ListHostedZones",
                  "route53:ListResourceRecordSets"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "ssm:GetParameterHistory",
                  "ssm:GetParametersByPath",
                  "ssm:GetParameters",
                  "ssm:GetParameter"
                ],
                "Resource": {"Fn::Join": ["", ["arn:aws:ssm:",{ "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":parameter/*"]]}
              }
            ]
          },
          "Roles": [ {
            "Ref": "BastionRole"
          } ]
      }
    },
    "BastionInstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/CloudFormation/",
          "Roles": [ {
              "Ref": "BastionRole"
          } ]
        }
    },

    "BastionServer" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "All" : ["install_cfn", "bootstrap" ]
          },
          
          "install_cfn" : {
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": { "Fn::Join": [ "", [
                  "[main]\n",
                  "stack=", { "Ref": "AWS::StackId" }, "\n",
                  "region=", { "Ref": "AWS::Region" }, "\n"
                ]]},
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": { "Fn::Join": [ "", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.BastionServer.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                          "         --stack ", { "Ref" : "AWS::StackName" },
                          "         --resource BastionServer ",
                          "         --configsets All ",
                          "         --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]},
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              },
              "/lib/systemd/system/cfn-hup.service": {
                "content": {
                  "Fn::Join": [ "", [
                      "[Unit]\n",
                      "Description=cfn-hup daemon\n\n",
                      "[Service]\n",
                      "Type=simple\n",
                      "ExecStart=/opt/aws/bin/cfn-hup\n",
                      "Restart=always\n\n",
                      "[Install]\n",
                      "WantedBy=multi-user.target"
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "01_enable_cfn_hup": {
                "command": "systemctl enable cfn-hup.service"
              },
              "02_start_cfn_hup": {
                "command": "systemctl start cfn-hup.service"
              }
            }
          },

          "bootstrap" : {
            "commands" : {
              "01create_directory": {
                "command": "[ -d /services ] || mkdir /services"
              },
              "02clone_bootstrap_repo" : {
                "command" : "git clone https://github.com/twoyang0917/aws-bootstrap.git",
                "cwd" : "/services"
              },
              "03exe_bootstrap": {
                "command": "bash /services/aws-bootstrap/bastion_bootstrap.sh"
              }
            }
          }
        }
      },
      "Properties" : {
        "SubnetId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-PublicSubnet1ID"
          }
        },
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroupIds" : [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${SGStackName}-BastionSG"
            }
          }
        ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap": [ "AWSRegionOS2AMI", { "Ref": "AWS::Region" } , "xenial" ] },
        "IamInstanceProfile": { "Ref" : "BastionInstanceProfile" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                       "#!/bin/bash -xe\n",
                       "apt-get update && apt-get install -y apt-transport-https ca-certificates software-properties-common python wget curl git\n",
                       "curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && python /tmp/get-pip.py\n",
                       "curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz -o /tmp/aws-cfn-bootstrap-latest.tar.gz\n",
                       "mkdir -p /opt/aws/bin\n",
                       "easy_install --script-dir /opt/aws/bin /tmp/aws-cfn-bootstrap-latest.tar.gz\n",

                       "/opt/aws/bin/cfn-init -v ",
                       "         --stack ", { "Ref" : "AWS::StackName" },
                       "         --resource BastionServer ",
                       "         --configsets All ",
                       "         --region ", { "Ref" : "AWS::Region" }, "\n",

                       "/opt/aws/bin/cfn-signal -e $? ",
                       "         --stack ", { "Ref" : "AWS::StackName" },
                       "         --resource BastionServer ",
                       "         --region ", { "Ref" : "AWS::Region" }, "\n"
        ]]}},
        "Tags": [
          {
            "Key": "AA_SERVER_GROUP",
            "Value": "Bastion"
          }
        ]
      }
    },

    "IPAddress": {
      "Type": "AWS::EC2::EIP"
    },

    "IPAssoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "BastionServer"
        },
        "EIP": {
          "Ref": "IPAddress"
        }
      }
    }
  },

  "Outputs" : {
    "PublicIP": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": { "Ref" : "IPAddress" },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicIP"
        }
      }
    },
    "PrivateIP": {
      "Description": "Private IP address of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": [ "BastionServer", "PrivateIp" ]},
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateIP"
        }
      }
    }
  }
}
