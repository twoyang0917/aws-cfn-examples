{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template Wordpress Server: WordPress is web software you can use to create a beautiful website or blog.",

  "Parameters" : {
    "VPCStackName": {
      "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
      "Type": "String",
      "MinLength": 1,
      "MaxLength": 255,
      "Default": "VPC"
    },

    "BastionStackName": {
      "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
      "Type": "String",
      "MinLength": 1,
      "MaxLength": 255,
      "Default": "Bastion"
    },

    "OfficeIP": {
      "Description": "The Office IP address",
      "Type": "String",
      "Default": "192.168.0.100/32",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "DBUser" : {
      "NoEcho": "true",
      "Description" : "The WordPress database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "MultiAZDatabase": {
      "Description" : "Create a Multi-AZ Amazon RDS database instance",
      "Type": "String",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "InstanceType" : {
      "Description" : "Wordpress Server EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
  },

  "Resources" : {

    "WordpressALBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription": "Open HTTP access from office IP",
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : { "Ref" : "OfficeIP"}
        }],
        "VpcId" : {
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-VPCID"
          }
        }
      }
    },

    "WordpressServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access from Bastion Server and HTTP access from ALB",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", 
            "SourceSecurityGroupId" : { 
              "Fn::ImportValue": {
                "Fn::Sub": "${BastionStackName}-SecurityGroupID"
              }
            }
          },
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", 
            "SourceSecurityGroupId" : { "Fn::GetAtt" : ["WordpressALBSecurityGroup", "GroupId" ]}
          }
        ],
        "VpcId" : { 
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-VPCID"
          }
        }
      }
    },

    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription": "Open database for access",
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "3306",
          "ToPort" : "3306",
          "SourceSecurityGroupId" : { "Fn::GetAtt" : ["WordpressServerSecurityGroup", "GroupId" ]}
        }],
        "VpcId" : {
          "Fn::ImportValue": {
            "Fn::Sub": "${VPCStackName}-VPCID"
          }
        }
      }
    },

    "DBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
          "DBSubnetGroupDescription" : "Subnet Group of database",
          "DBSubnetGroupName" : "DBSubnetGroup",
          "SubnetIds" : [
            { "Fn::ImportValue": {"Fn::Sub": "${VPCStackName}-DatabaseSubnets"}}
          ]
      }
    },

		"WordpessRDSStack": {
			"Type" : "AWS::CloudFormation::Stack",
			"Properties" : {
        "Parameters": {
          "DBUser": {"Ref": "DBUser"},
          "DBPassword": "{{resolve:ssm-secure:/CloudFormation/Wordpress/DBPassword:1}}",
          "DBSecurityGroups": [{"Ref": "DBSecurityGroup"}],
          "DBSubnetGroupName": {"Ref": "DBSubnetGroup"},
          "MultiAZDatabase": {"Ref": "MultiAZDatabase"}
				},
				"TemplateURL" : "https://raw.githubusercontent.com/twoyang0917/aws-cfn-examples/master/wordpress-rds-tmpl.json",
				"TimeoutInMinutes" : "30"
			}
    },
    
    "WordpessFrontendStack": {
			"Type" : "AWS::CloudFormation::Stack",
			"Properties" : {
				"Parameters" : {
          "VPCID": { "Fn::ImportValue": {"Fn::Sub": "${VPCStackName}-VPCID"}},
          "KeyName": {"Ref": "KeyName"},
          "WordpressALBSecurityGroup": {"Ref": "WordpressALBSecurityGroup"},
          "WordpressServerSecurityGroup": {"Ref": "WordpressServerSecurityGroup"},
					"PublicSubnets": [{ "Fn::ImportValue": {"Fn::Sub": "${VPCStackName}-PublicSubnets"}}],
          "PrivateSubnets": [{ "Fn::ImportValue": {"Fn::Sub": "${VPCStackName}-PrivateSubnets"}}],
          "DBEndpoint": { "Fn::GetAtt": ["WordpessRDSStack", "Outputs.DBEndpoint"] } 
				},
				"TemplateURL" : "https://raw.githubusercontent.com/twoyang0917/aws-cfn-examples/master/wordpress-frontend-tmpl.json",
				"TimeoutInMinutes" : "15"
			}
		}
  },

  "Outputs" : {
    "Endpoint": {
      "Description": "Endpoint of this wordpress application, the DNS name of ALB.",
      "Value": { "Fn::GetAtt": [ "WordpessFrontendStack", "Outputs.ALBDNSName" ]},
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Endpoint"
        }
      }
    }
  }
}
